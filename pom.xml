<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>partner-service</name>
  <description>Partner Service</description>
  <groupId>com.synkrato.services</groupId>
  <artifactId>java-rest-service</artifactId>
  <version>1.26.3-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <equalsverifier.version>2.2</equalsverifier.version>
    <sonar.host.url>https://sonar.ellielabs.com/</sonar.host.url>
    <sonar.java.source>${java.version}</sonar.java.source>
    <docker.registry>docker-local.artifactory-stg.synkrato.io</docker.registry>
    <docker.serverId>synkrato-artifactory-docker</docker.serverId>
    <aws.sdk.version>1.12.261</aws.sdk.version>
    <hibernate-types.version>2.9.12</hibernate-types.version>
    <caffeine.version>2.8.4</caffeine.version>
    <spring.context.version>5.2.7.RELEASE</spring.context.version>
    <epc-common.version>1.28.1-SNAPSHOT</epc-common.version>
    <jacoco-plugin.version>0.8.5</jacoco-plugin.version>
    <spring-boot-starter-test.version>2.3.0.RELEASE</spring-boot-starter-test.version>
    <spring-cloud.version>3.0.2</spring-cloud.version>
    <jjwt.version>0.9.1</jjwt.version>
    <replacer-plugin.version>1.5.2</replacer-plugin.version>
    <docker-plugin.version>1.0.0</docker-plugin.version>
    <promote-plugin.version>2.0.0</promote-plugin.version>
    <release-plugin.version>2.5.3</release-plugin.version>
    <checkstyle-plugin.version>3.1.0</checkstyle-plugin.version>
    <findbugs-plugin.version>3.0.3</findbugs-plugin.version>
    <pmd-plugin.version>3.6</pmd-plugin.version>
    <postgresql.version>42.3.7</postgresql.version>
    <commons-io.version>2.7</commons-io.version>
    
    <!-- Added below log4j version to override log4j-core for log4Shell vulnerability.
      TODO: Revert after upgrading to Spring v2.5.8+ or v2.6.2+
      Ref: https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot -->
    <log4j2.version>2.17.1</log4j2.version>
    <tomcat.version>9.0.81</tomcat.version>
    <snakeyaml.version>1.31</snakeyaml.version>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.5.15</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>com.synkrato.services</groupId>
      <artifactId>epc-common-component</artifactId>
      <version>${epc-common.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-bootstrap</artifactId>
      <version>${spring-cloud.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-keyvalue</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>${caffeine.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.context.version}</version>
    </dependency>
    <dependency>
      <groupId>nl.jqno.equalsverifier</groupId>
      <artifactId>equalsverifier</artifactId>
      <version>${equalsverifier.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vladmihalcea</groupId>
      <artifactId>hibernate-types-52</artifactId>
      <version>${hibernate-types.version}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <version>${aws.sdk.version}</version>
    </dependency>
    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-junit-jupiter</artifactId>
        </exclusion>
      </exclusions>
      <version>${spring-boot-starter-test.version}</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>${jjwt.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean install</defaultGoal>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>${replacer-plugin.version}</version>
          <executions>
            <execution>
              <id>default-cli</id>
              <phase>none</phase>
              <goals>
                <goal>replace</goal>
              </goals>
              <configuration>
                <includes>
                  <include>Dockerfile</include>
                  <include>src/main/resources/project.properties</include>
                </includes>
                <replacements>
                  <replacement>
                    <token>${project.artifactId}-(.*?).jar</token>
                    <value>${project.artifactId}-${project.version}.jar</value>
                  </replacement>
                  <replacement>
                    <token>synkrato.microservice.project-version=(.*)</token>
                    <value>synkrato.microservice.project-version=${project.version}</value>
                  </replacement>
                </replacements>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-plugin.version}</version>
          <configuration>
            <imageName>${docker.registry}/${dockerRepo}/${project.artifactId}</imageName>
            <imageTags>
              <imageTag>${project.version}</imageTag>
            </imageTags>
            <dockerDirectory>.</dockerDirectory>
            <resources>
              <resource>
                <targetPath>/</targetPath>
                <directory>.</directory>
                <include>target/${project.artifactId}-${project.version}.jar</include>
              </resource>
              <resource>
                <targetPath>/</targetPath>
                <directory>.</directory>
                <include>deployment/scripts/start.sh</include>
              </resource>
            </resources>
            <serverId>${docker.serverId}</serverId>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/PartnerServiceApplication.class</exclude>
            <exclude>**/PartnerServiceConstants.class</exclude>
            <exclude>**/jpa/*</exclude>
            <exclude>**/exception/*</exclude>
            <exclude>**/security/*</exclude>
            <exclude>**/data/*</exclude>
            <exclude>**/data/repository/*</exclude>
            <exclude>**/dto/*</exclude>
            <exclude>**/config/*</exclude>
            <exclude>**/views/*</exclude>
          </excludes>
          <append>true</append>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>se.jiderhamn</groupId>
        <artifactId>promote-maven-plugin</artifactId>
        <version>${promote-plugin.version}</version>
        <!-- Automatically execute promote:make-promotable after each snapshot build -->
        <executions>
          <execution>
            <goals>
              <goal>make-promotable</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${release-plugin.version}</version>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <preparationGoals>clean replacer:replace install docker:build -DdockerRepo=greenbuild-repo
            -DpushImageTag scm:checkin
            -Dmessage="[maven-release-plugin] prepare release" promote:artifacts
          </preparationGoals>
          <completionGoals>clean replacer:replace install docker:build -DdockerRepo=cicd-repo
            -DpushImageTag
            -DdockerImageTags=dev scm:checkin -Dmessage="[maven-release-plugin] prepare for next
            development
            iteration"
          </completionGoals>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle-plugin.version}</version>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.19</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs-plugin.version}</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Low</threshold>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${pmd-plugin.version}</version>
        <configuration>
          <targetJdk>${java.version}</targetJdk>
          <skipEmptyReport>false</skipEmptyReport>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <repositories>
    <repository>
      <id>synkrato-artifactory-releases</id>
      <url>https://artifactory-stg.synkrato.io/artifactory/libs-release-local/</url>
    </repository>
    <repository>
      <id>synkrato-artifactory-snapshots</id>
      <url>https://artifactory-stg.synkrato.io/artifactory/libs-snapshot-local/</url>
      <snapshots>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <scm>
    <developerConnection>scm:git:https://git.synkrato.io/EPC/partner-service.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>

</project>
